using System.Collections;

namespace System.Data.Odbc;

/// <summary>Collects all errors generated by the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. This class cannot be inherited.</summary>
[Serializable]
public sealed class OdbcErrorCollection : ICollection, IEnumerable
{
	private ArrayList _items = new ArrayList();

	/// <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
	/// <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
	object ICollection.SyncRoot => this;

	/// <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
	/// <returns>
	///   <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
	bool ICollection.IsSynchronized => false;

	/// <summary>Gets the number of errors in the collection.</summary>
	/// <returns>The total number of errors in the collection.</returns>
	public int Count => _items.Count;

	/// <summary>Gets the error at the specified index.</summary>
	/// <param name="i">The zero-based index of the error to retrieve.</param>
	/// <returns>An <see cref="T:System.Data.Odbc.OdbcError" /> that contains the error at the specified index.</returns>
	public OdbcError this[int i] => (OdbcError)_items[i];

	internal OdbcErrorCollection()
	{
	}

	internal void Add(OdbcError error)
	{
		_items.Add(error);
	}

	/// <summary>Copies the elements of the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> into an array, starting at the specified index within the array.</summary>
	/// <param name="array">The array into which to copy the elements.</param>
	/// <param name="i">The starting index of <paramref name="array" />.</param>
	/// <exception cref="T:System.ArgumentException">The sum of <paramref name="index" /> and the number of elements in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> is greater than the length of the array.</exception>
	/// <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> is <see langword="null" />.</exception>
	/// <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for <paramref name="array" />.</exception>
	public void CopyTo(Array array, int i)
	{
		_items.CopyTo(array, i);
	}

	/// <summary>Copies all the elements of the current <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> to the specified <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> starting at the specified destination index.</summary>
	/// <param name="array">The <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> that is the destination of the elements copied from the current <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</param>
	/// <param name="i">A 32-bit integer that represents the index in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> at which copying starts.</param>
	public void CopyTo(OdbcError[] array, int i)
	{
		_items.CopyTo(array, i);
	}

	/// <summary>Returns an object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> objects in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</summary>
	/// <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> objects in the <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</returns>
	public IEnumerator GetEnumerator()
	{
		return _items.GetEnumerator();
	}

	internal void SetSource(string Source)
	{
		foreach (OdbcError item in _items)
		{
			item.SetSource(Source);
		}
	}
}
