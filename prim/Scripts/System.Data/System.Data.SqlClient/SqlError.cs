namespace System.Data.SqlClient;

/// <summary>Collects information relevant to a warning or error returned by SQL Server.</summary>
[Serializable]
public sealed class SqlError
{
	private string _source = "Core .Net SqlClient Data Provider";

	private int _number;

	private byte _state;

	private byte _errorClass;

	private string _server;

	private string _message;

	private string _procedure;

	private int _lineNumber;

	private int _win32ErrorCode;

	private Exception _exception;

	/// <summary>Gets the name of the provider that generated the error.</summary>
	/// <returns>The name of the provider that generated the error.</returns>
	public string Source => _source;

	/// <summary>Gets a number that identifies the type of error.</summary>
	/// <returns>The number that identifies the type of error.</returns>
	public int Number => _number;

	/// <summary>Some error messages can be raised at multiple points in the code for the Database Engine. For example, an 1105 error can be raised for several different conditions. Each specific condition that raises an error assigns a unique state code.</summary>
	/// <returns>The state code.</returns>
	public byte State => _state;

	/// <summary>Gets the severity level of the error returned from SQL Server.</summary>
	/// <returns>A value from 1 to 25 that indicates the severity level of the error. The default is 0.</returns>
	public byte Class => _errorClass;

	/// <summary>Gets the name of the instance of SQL Server that generated the error.</summary>
	/// <returns>The name of the instance of SQL Server.</returns>
	public string Server => _server;

	/// <summary>Gets the text describing the error.</summary>
	/// <returns>The text describing the error. For more information on errors generated by SQL Server, see Database Engine Events and Errors.</returns>
	public string Message => _message;

	/// <summary>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</summary>
	/// <returns>The name of the stored procedure or RPC. For more information on errors generated by SQL Server, see Database Engine Events and Errors.</returns>
	public string Procedure => _procedure;

	/// <summary>Gets the line number within the Transact-SQL command batch or stored procedure that contains the error.</summary>
	/// <returns>The line number within the Transact-SQL command batch or stored procedure that contains the error.</returns>
	public int LineNumber => _lineNumber;

	internal int Win32ErrorCode => _win32ErrorCode;

	internal Exception Exception => _exception;

	internal SqlError(int infoNumber, byte errorState, byte errorClass, string server, string errorMessage, string procedure, int lineNumber, uint win32ErrorCode, Exception exception = null)
		: this(infoNumber, errorState, errorClass, server, errorMessage, procedure, lineNumber, exception)
	{
		_win32ErrorCode = (int)win32ErrorCode;
	}

	internal SqlError(int infoNumber, byte errorState, byte errorClass, string server, string errorMessage, string procedure, int lineNumber, Exception exception = null)
	{
		_number = infoNumber;
		_state = errorState;
		_errorClass = errorClass;
		_server = server;
		_message = errorMessage;
		_procedure = procedure;
		_lineNumber = lineNumber;
		_win32ErrorCode = 0;
		_exception = exception;
	}

	/// <summary>Gets the complete text of the error message.</summary>
	/// <returns>The complete text of the error.</returns>
	public override string ToString()
	{
		return typeof(SqlError).ToString() + ": " + _message;
	}
}
