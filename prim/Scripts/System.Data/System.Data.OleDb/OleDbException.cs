using System.Data.Common;
using System.Runtime.Serialization;

namespace System.Data.OleDb;

/// <summary>The exception that is thrown when the underlying provider returns a warning or error for an OLE DB data source. This class cannot be inherited.</summary>
[System.MonoTODO("OleDb is not implemented.")]
public sealed class OleDbException : DbException
{
	/// <summary>Gets the HRESULT of the error.</summary>
	/// <returns>The HRESULT of the error.</returns>
	public override int ErrorCode
	{
		get
		{
			throw ADP.OleDb();
		}
	}

	/// <summary>Gets a collection of one or more <see cref="T:System.Data.OleDb.OleDbError" /> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for OLE DB.</summary>
	/// <returns>The collected instances of the <see cref="T:System.Data.OleDb.OleDbError" /> class.</returns>
	public OleDbErrorCollection Errors
	{
		get
		{
			throw ADP.OleDb();
		}
	}

	internal OleDbException()
	{
	}

	/// <summary>This member overrides <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
	/// <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
	/// <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
	/// <exception cref="T:System.ArgumentNullException">The <paramref name="si" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
	public override void GetObjectData(SerializationInfo si, StreamingContext context)
	{
		throw ADP.OleDb();
	}
}
